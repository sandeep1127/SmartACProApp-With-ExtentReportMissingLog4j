<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is the Screenshot of faile test cases]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\schoudhary\eclipse-workspace\SmartACProApp\ScreenShots\Android_13.0_Pixel_7\2024-09-23-20-02-29\LoginPageTest\invalidEmailErrText.png'> <img src='C:\Users\schoudhary\eclipse-workspace\SmartACProApp\ScreenShots\Android_13.0_Pixel_7\2024-09-23-20-02-29\LoginPageTest\invalidEmailErrText.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2024-09-23T20:02:28 IST" name="Suite" finished-at="2024-09-23T20:03:19 IST" duration-ms="50146">
    <groups>
    </groups>
    <test started-at="2024-09-23T20:02:28 IST" name="Test" finished-at="2024-09-23T20:03:19 IST" duration-ms="50146">
      <class name="com.qa.testClass.LoginPageTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:29 IST" name="beforeTest" finished-at="2024-09-23T20:02:37 IST" duration-ms="8536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pixel_7]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[13.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[PD21BDD464038424]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:37 IST" name="beforeClass" finished-at="2024-09-23T20:02:37 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:37 IST" name="beforeMethod" finished-at="2024-09-23T20:02:38 IST" duration-ms="602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testClass.LoginPageTest.invalidEmailErrText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidEmailErrText()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:38 IST" name="invalidEmailErrText" finished-at="2024-09-23T20:02:46 IST" duration-ms="8292" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Email address not found.] but found [Email address not found.lalala]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Email address not found.] but found [Email address not found.lalala]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.qa.testClass.LoginPageTest.invalidEmailErrText(LoginPageTest.java:91)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the Screenshot of faile test cases]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\schoudhary\eclipse-workspace\SmartACProApp\ScreenShots\Android_13.0_Pixel_7\2024-09-23-20-02-29\LoginPageTest\invalidEmailErrText.png'> <img src='C:\Users\schoudhary\eclipse-workspace\SmartACProApp\ScreenShots\Android_13.0_Pixel_7\2024-09-23-20-02-29\LoginPageTest\invalidEmailErrText.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidEmailErrText -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:47 IST" name="afterMethod" finished-at="2024-09-23T20:02:48 IST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:48 IST" name="beforeMethod" finished-at="2024-09-23T20:02:48 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testClass.LoginPageTest.invalidPasswordErrText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPasswordErrText()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:02:48 IST" name="invalidPasswordErrText" finished-at="2024-09-23T20:03:01 IST" duration-ms="13036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPasswordErrText -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:01 IST" name="afterMethod" finished-at="2024-09-23T20:03:01 IST" duration-ms="610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:01 IST" name="beforeMethod" finished-at="2024-09-23T20:03:02 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testClass.LoginPageTest.validLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validLogin()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:02 IST" name="validLogin" finished-at="2024-09-23T20:03:17 IST" duration-ms="15623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:17 IST" name="afterMethod" finished-at="2024-09-23T20:03:18 IST" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:18 IST" name="afterClass" finished-at="2024-09-23T20:03:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.testClass.LoginPageTest@544fa968]" started-at="2024-09-23T20:03:18 IST" name="afterTest" finished-at="2024-09-23T20:03:19 IST" duration-ms="562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.testClass.LoginPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
