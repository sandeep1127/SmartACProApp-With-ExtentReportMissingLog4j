<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Smartac</groupId>
  <artifactId>SmmartACProApp</artifactId>
  <version>0.0.1-SNAPSHOT</version>


<build>
<plugins>
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>               <!--  Maven Compiler plugin and Sure Fire Plugin to run our Project from CMD -->
       <artifactId>maven-compiler-plugin</artifactId>                      
          <version>3.13.0</version>
 <configuration>
   <source>17</source>
   <target>17</target>
  </configuration>
</plugin>

<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>testngAndroid.xml</suiteXmlFile>    <!--  Creating 2 blocks as we have 2 tesng Xml files  Telling Maven which TestNG XML to run. FYI since xml is located at root folder that's why we don't need to give path. If it was somewhere else, we had to give complete path    -->  
            <suiteXmlFile>testngIOS.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
      </plugin>

</plugins>
</build>









<dependencies>
  
  <!-- https://mvnrepository.com/artifact/io.appium/java-client -->
<dependency>
    <groupId>io.appium</groupId>
    <artifactId>java-client</artifactId>
    <version>9.3.0</version>
</dependency>

  
  <!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.10.2</version>
    <scope>test</scope>
</dependency>


<!-- https://mvnrepository.com/artifact/org.json/json -->
<dependency>                                                      <!--dependency library "org.json" to read the JSON data inside Testclass which we created in a JSOn file created in TesData-->
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20240303</version>
</dependency>





<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->           <!-- used in the method of Listener for screenshot for Failed test cases-->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.16.1</version>
</dependency>

<!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
<dependency>
    <groupId>commons-codec</groupId>
    <artifactId>commons-codec</artifactId>
    <version>1.16.1</version>
</dependency>






<!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.10.2</version>
    <scope>test</scope>
</dependency>



<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->                     <!--   we will add 2 depencies for Log4j. Akways use '. Apache Log4j Core' and . Apache Log4j API". Don't use Apache Log4J'-->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>2.23.1</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.23.1</version>
</dependency>



<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports-testng-adapter -->
<!-- 
  <dependency>                                                                                       STEP 1 : Add this "ExtentReports adapter Dependency"". STEP 2 : Inside SaseClass use 1 liner "@Listeners(ExtentITestListenerAdapter.class)" listner before class starts  . STEP 3 :  Create extent.properties file inside test/resources and add pre written code there . STEP 4 :  create spart-config.xml file at root level & add pre written code there . THIS IS USED WHEN YOU WANT TO GENERATED A SINPLE LEVEL REPORT without any screenshots
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports-testng-adapter</artifactId>
    <version>1.2.2</version>
</dependency>

-->

<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->                 <!--2nd way for Extent reports : This is EXTENT REPORT dependency. Its better coz we can get screenshots of failed cases etc in this.-->    
<dependency>
    <groupId>com.aventstack</groupId>
    <artifactId>extentreports</artifactId>
    <version>5.1.2</version>
</dependency>

                                                                       


</dependencies>













</project>